allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    group = 'libwebcam'
    version = '1.0.1'
}

project.ext.junit_version = '5.8.1'

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'signing'

    java {
        withJavadocJar()
        withSourcesJar()
        toolchain { languageVersion = JavaLanguageVersion.of(11) }
    }

    // Prevents tons of errors if someone is using ASCII
    tasks.withType(JavaCompile).configureEach { options.encoding = "UTF-8" }

    // Enable incremental compile. Should make single file changes faster
    tasks.withType(JavaCompile) { options.incremental = true }

    // Fail on jar conflict
    configurations.configureEach { resolutionStrategy { failOnVersionConflict() } }

    repositories {
        mavenCentral()
        mavenLocal()

        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }

    test {
        useJUnitPlatform()
        reports.html.enabled = false
        // Make the error logging verbose to make debugging on CI easier
        testLogging.showStandardStreams = true
        testLogging.showCauses true
        testLogging.showExceptions true
        testLogging.showStackTraces true
    }

    javadoc {
        configure(options) {
            links = ['https://docs.oracle.com/en/java/javase/11/docs/api/']
            failOnError = false
            enabled = !project.version.contains("SNAPSHOT") // disable to stop it from spamming stdout
        }

        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    if (!project.tasks.publish.enabled)
        return

    // if Maven central isn't setup in ~/.gradle/gradle.properties fill in these variables to make it happy
    if (!project.hasProperty('ossrhUsername')) {
        ext.ossrhUsername = "dummy"
        ext.ossrhPassword = "dummy"
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                pom {
                    name = 'libwebcam'
                    description = 'UVC camera wrapper for java'
                    url = 'https://nowebsite.org'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'pabeles'
                            name = 'Peter Abeles'
                            email = 'peter.abeles@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/lessthanoptimal/libwebcam.git'
                        developerConnection = 'scm:git:git://github.com/lessthanoptimal/libwebcam.git'
                        url = 'https://github.com/lessthanoptimal/libwebcam'
                    }
                }
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }

    if (ext.ossrhPassword != "dummy") {
        signing { sign publishing.publications.mavenJava }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = '6.9.1'
}