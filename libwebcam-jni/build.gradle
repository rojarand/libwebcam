plugins {
    id "com.peterabeles.nativehelper" version "1.0.0"
}

import com.peterabeles.NativeHelper

dependencies {
    ['core','swing'].each { String a->
        testCompile('org.boofcv:boofcv-'+a+':0.36')
    }

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit_version")
}

tasks.withType(Test) {
    systemProperty "java.library.path", file("../build/jni")
}

// Get the location of the native code
if( project.hasProperty("native_build_location")) {
    ext.build_location = project.property("native_build_location")
} else {
    ext.build_location = "../build_release"
}
if( !file("$ext.build_location").exists() ) {
    throw new GradleException("Native build directory $ext.build_location does not exist!")
}

// Determine the native platform it's running on
ext.platform = NativeHelper.getPlatformName()

println "  Classifier name: $project.ext.platform"
println "  Native location: $project.ext.build_location"

task nativeJar(type: Jar) {
    classifier "$project.ext.platform"
    from files("$project.ext.build_location/libwebcam-jni/","$project.ext.build_location/libwebcam/")
    include 'libwebcamjni.*'
    include 'libwebcam.*'
}
